log:
IMPORTANT: REMEMBER TO CHANGE OR REMOVE TEMP ICON
Update:
added about screen, plan to add text below for explanation of project

Completed buttons (main_menu.py):
    START
    ABOUT
    QUIT
To do:
    OPTIONS - needs screen




Current issues:
Game currently only playable with game screen as visual assets currently do NOT scale with the master surface.
Not exactly a serious issue, however this abandons the idea of having fullscreen on any monitor.
For clarity,there are 3 main surfaces: the display surface (window), master_surface (contains all visual aspects),
scaled_master_surface(self explanitory). Originally, I was supposed to develop the game on the master surface, then
when I want to test it for dynamically scaling to any monitor size, scaled_master_surface is meant to be scaled to
the device's current resolution, instead of having a fixed size. This was under the assumption that all visual assets
and their position on the master surface would scale as well. This is not the case. Will most likely drop this aspect
and have fixed dimensions but big enough for gameplay.

Currently set to the current dimensions of the screen, however I am unable to text whether the game's
visual assets scale with the master surface, or view window


Code organisation for visual assets, maybe create classes for each kind of surface I can implement,
perhaps even a surface manager class (yay more work in design doc)


Also I should probably find a more efficient way of adding logic to buttons, rather than creating
massive if tangles, cos its actually kinda ugly and ill probably get marked down for its quality
This will probably help me in the long run, especially if I plan to slap a bunch of 'clickables'
onto the screen

NEA OBJECTIVES:
    ipso
    UML diagram
    more documentation


Current goals:


About Screen - partially complete
    learn how to add organised boxes of text / paragraphs
    Add text explaining the project

Smoother text on buttons - incomplete
    Button text gets fuzzy each tick when mouse is moving.
    Issue is probably in button.py: is_clicked()

Screen Class Asset Manager - planning
    Judging from how the code looks now, it will probably be better to have visual assets organised in
    the code so that its easier to read and debug cos currently, text and images do not have organisation
    so it miiight get messy in the future, but so far everything is okay.



Full Screen - Done (Requires testing)
    Successfully set screen size to user's unique screen dimensions
    (not tested on other devices, i gotta find a way to get the program solution so I can send it to other devices)


Dynamic screen switching - partially complete
    Button input - DONE
    Screen switch logic - DONE (Working example, main menu --> game screen)


Add backgrounds - DONE
    Load assets - Done
    Use assets - Done
    (successful in main_menu.py)


Add 2D Array in game_screen.py - Incomplete
    Create 2D Array
        2D Array methods and implementation
        Clear view and use of Array interactions
    Create 2D Array visuals
        Uhhh research how :)


Add Unit Class - Incomplete
    Create Unit class
    Create Unit Pool and class

    Define necessary lists for organisation


File management - Incomplete
    Research pycharm docs
    Keep all files inside 'src'
    Move files to separate directory folders
    Manage file paths



Important milestones:
    Full Screen
    Dynamic screen switching

    File management
    Player and Computer class management
    2D Array (visuals especially)
    Unit generation ---> see C# prototype and python practice project (python obj pooling)
    Tile and Unit relationship
    Computer Pathfinding ---> custom A*, perhaps create another project to practice this
    Computer behaviour ---> Implement after gameplay exist, so that i can get conditions