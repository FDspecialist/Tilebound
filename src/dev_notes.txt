log:

MOVING TO NOTION!

IMPORTANT DESIGN CHOICE:
player and computer class inside board class.. why?
player and computer class need to be in same module where units are being generated.
prevents awkwardly rewriting methods in both classes to accomodate for player and computer classes needing updates.


Create a cell with a colour for the player and another colour for the computer

Create path finding for player and computer units

Include obstacles

Create player and computer classes - Include in UML


Start getting basic game functionality created.
    Turn system
    Player and Computer Units
    Path finding
    Unit generation
    Obstacles

Update:

Completed buttons (main_menu.py):
    START
    ABOUT
    QUIT
To do:
    OPTIONS - needs screen


NEA OBJECTIVES:
    FUNCTIONALITY
        Player
        Computer
        Path finding
        Unit Generation
        Obstacles




    ipso
    UML diagram
    more documentation


Current goals:


About Screen - partially complete
    learn how to add organised boxes of text / paragraphs
    Add text explaining the project

Smoother text on buttons - incomplete
    Button text gets fuzzy each tick when mouse is moving.
    Issue is probably in button.py: is_clicked()

Screen Class Asset Manager - planning
    Judging from how the code looks now, it will probably be better to have visual assets organised in
    the code so that its easier to read and debug cos currently, text and images do not have organisation
    so it miiight get messy in the future, but so far everything is okay.



Full Screen - Done (Requires testing)
    Successfully set screen size to user's unique screen dimensions
    (not tested on other devices, i gotta find a way to get the program solution so I can send it to other devices)


Dynamic screen switching - partially complete
    Button input - DONE
    Screen switch logic - DONE (Working example, main menu --> game screen)


Add backgrounds - DONE
    Load assets - Done
    Use assets - Done
    (successful in main_menu.py)


Add 2D Array in game_screen.py - Incomplete
    Create 2D Array
        2D Array methods and implementation
        Clear view and use of Array interactions
    Create 2D Array visuals

        #calculating tile position in pixels (being able to fit the sprite)

        tileposx = boardrectx * TILESIZE
        tileposy = boardrectx * TILESIZE
        tilepos = (tileposx, tileposy)


Add Unit Class - Incomplete
    Create Unit class
    Create Unit Pool and class

    Define necessary lists for organisation


File management - Complete
    Research pycharm docs
    Keep all files inside 'src'
    Move files to separate directory folders
    Manage file paths



Important milestones:
    Full Screen
    Dynamic screen switching

    File management
    Player and Computer class management
    2D Array (visuals especially)
    Unit generation ---> see C# prototype and python practice project (python obj pooling)
    Tile and Unit relationship
    Computer Pathfinding ---> custom A*, perhaps create another project to practice this
    Computer behaviour ---> Implement after gameplay exist, so that i can get conditions